precision highp float;  // 高精度浮動小数点を使用

// ========================================
// バリイング変数（フラグメントシェーダーに渡す値）
// ========================================
varying vec2 vUv;  // UV座標をフラグメントシェーダーに渡す

void main() {
    // ========================================
    // UV座標の受け渡し
    // ========================================
    // Three.jsが自動的に提供するuv属性をそのまま渡す
    // uv: 頂点のテクスチャ座標（0.0〜1.0の範囲）
    //     左下 = (0.0, 0.0)
    //     右下 = (1.0, 0.0)
    //     左上 = (0.0, 1.0)
    //     右上 = (1.0, 1.0)
    vUv = uv;
    
    // ========================================
    // 頂点位置の変換
    // ========================================
    // 頂点位置を最終的なクリップ空間座標に変換
    // position: Three.jsが提供する頂点の3D位置
    // modelViewMatrix: モデル変換行列 × ビュー変換行列
    // projectionMatrix: 投影変換行列
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    
    // 変換の流れ：
    // 1. position: ローカル座標系での頂点位置
    // 2. modelViewMatrix * position: カメラから見た位置
    // 3. projectionMatrix * (上記): 画面上の位置（-1〜1の範囲）
}