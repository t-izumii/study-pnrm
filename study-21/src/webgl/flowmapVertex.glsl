precision highp float;  // 高精度浮動小数点を使用

// ========================================
// バリイング変数（フラグメントシェーダーに渡す値）
// ========================================
varying vec2 vUv;  // UV座標をフラグメントシェーダーに渡す

void main() {
    // ========================================
    // UV座標の受け渡し
    // ========================================
    // フローマップは画面全体をカバーする2x2のPlaneGeometryで描画される
    // UV座標をそのままフラグメントシェーダーに渡す
    vUv = uv;
    
    // ========================================
    // 頂点位置の変換（フルスクリーンクワッド用）
    // ========================================
    // フローマップ生成用のシンプルな変換
    // OrthographicCamera(-1, 1, 1, -1, 0, 1) と
    // PlaneGeometry(2, 2) の組み合わせで
    // 画面全体をカバーする
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    
    // この設定により：
    // - 画面全体がUV座標(0,0)〜(1,1)でカバーされる
    // - フローマップの各ピクセルが画面の対応する位置にマッピングされる
}